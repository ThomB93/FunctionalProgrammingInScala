[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\thomb\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\thomb\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.5 (Oracle Corporation Java 15.0.1)
[debug]       Load.loadUnit: plugins took 190.1728ms
[debug]       Load.loadUnit: defsScala took 0.4272ms
[debug] [Loading] Scanning directory C:\Users\thomb\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\thomb\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 26.8278 ms
[debug]           Load.resolveProject(global-plugins) took 60.9964ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\thomb\.sbt\1.0\plugins, plugins: List(<none>))) took 112.0229ms
[debug] [Loading] Done in C:\Users\thomb\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 153.7141ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2335ms
[debug]     Load.loadUnit(file:/C:/Users/thomb/.sbt/1.0/plugins/, ...) took 358.9101ms
[debug]   Load.apply: load took 599.097ms
[debug]   Load.apply: resolveProjects took 6.1259ms
[debug]   Load.apply: finalTransforms took 113.91ms
[debug]   Load.apply: config.delegates took 8.7053ms
[debug]   Load.apply: Def.make(settings)... took 921.4165ms
[debug]   Load.apply: structureIndex took 102.1954ms
[debug]   Load.apply: mkStreams took 1.6019ms
[info] loading global plugins from C:\Users\thomb\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3391.306ms
[debug]           Load.loadUnit: plugins took 30.7278ms
[debug]           Load.loadUnit: defsScala took 0.007ms
[debug] [Loading] Scanning directory C:\Users\thomb\OneDrive\Documents\Scala\intelliJIdeaProjects\FunctionalProgrammingInScala_2\project
[debug]             Load.loadUnit: mkEval took 6.4336ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\thomb\OneDrive\Documents\Scala\intelliJIdeaProjects\FunctionalProgrammingInScala_2\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.7747 ms
[info] loading settings for project functionalprogramminginscala_2-build from idea.sbt ...
[debug]               Load.resolveProject(functionalprogramminginscala_2-build) took 13.1825ms
[debug]             Load.loadTransitive: finalizeProject(Project(id functionalprogramminginscala_2-build, base: C:\Users\thomb\OneDrive\Documents\Scala\intelliJIdeaProjects\FunctionalProgrammingInScala_2\project, plugins: List(<none>))) took 19.0068ms
[debug] [Loading] Done in C:\Users\thomb\OneDrive\Documents\Scala\intelliJIdeaProjects\FunctionalProgrammingInScala_2\project, returning: (functionalprogramminginscala_2-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2270.867ms
[debug]           Load.loadUnit: cleanEvalClasses took 7.6382ms
[debug]         Load.loadUnit(file:/C:/Users/thomb/OneDrive/Documents/Scala/intelliJIdeaProjects/FunctionalProgrammingInScala_2/project/, ...) took 2310.5309ms
[debug]       Load.apply: load took 2313.7389ms
[debug]       Load.apply: resolveProjects took 0.1174ms
[debug]       Load.apply: finalTransforms took 18.9015ms
[debug]       Load.apply: config.delegates took 2.9176ms
[debug]       Load.apply: Def.make(settings)... took 217.6075ms
[debug]       Load.apply: structureIndex took 28.1194ms
[debug]       Load.apply: mkStreams took 0.002ms
[info] loading project definition from C:\Users\thomb\OneDrive\Documents\Scala\intelliJIdeaProjects\FunctionalProgrammingInScala_2\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 4578.1734ms
[debug]     Load.loadUnit: defsScala took 0.0063ms
[debug] [Loading] Scanning directory C:\Users\thomb\OneDrive\Documents\Scala\intelliJIdeaProjects\FunctionalProgrammingInScala_2
[debug]       Load.loadUnit: mkEval took 0.2808ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\thomb\OneDrive\Documents\Scala\intelliJIdeaProjects\FunctionalProgrammingInScala_2, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.2026 ms
[info] loading settings for project functionalprogramminginscala_2 from build.sbt ...
[debug]         Load.resolveProject(functionalprogramminginscala_2) took 30.6056ms
[debug]       Load.loadTransitive: finalizeProject(Project(id functionalprogramminginscala_2, base: C:\Users\thomb\OneDrive\Documents\Scala\intelliJIdeaProjects\FunctionalProgrammingInScala_2, plugins: List(<none>))) took 36.5702ms
[debug] [Loading] Done in C:\Users\thomb\OneDrive\Documents\Scala\intelliJIdeaProjects\FunctionalProgrammingInScala_2, returning: (functionalprogramminginscala_2)
[debug]     Load.loadUnit: loadedProjectsRaw took 1151.4582ms
[debug]     Load.loadUnit: cleanEvalClasses took 20.2533ms
[debug]   Load.loadUnit(file:/C:/Users/thomb/OneDrive/Documents/Scala/intelliJIdeaProjects/FunctionalProgrammingInScala_2/, ...) took 5751.3049ms
[debug] Load.apply: load took 5754.2619ms
[debug] Load.apply: resolveProjects took 0.1364ms
[debug] Load.apply: finalTransforms took 23.7316ms
[debug] Load.apply: config.delegates took 0.3605ms
[debug] Load.apply: Def.make(settings)... took 87.2224ms
[debug] Load.apply: structureIndex took 25.2664ms
[debug] Load.apply: mkStreams took 0.0016ms
[info] set current project to FunctionalProgrammingInScala_2 (in build file:/C:/Users/thomb/OneDrive/Documents/Scala/intelliJIdeaProjects/FunctionalProgrammingInScala_2/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 55568 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 55568, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to FunctionalProgrammingInScala_2 (in build file:/C:/Users/thomb/OneDrive/Documents/Scala/intelliJIdeaProjects/FunctionalProgrammingInScala_2/)
[debug] > Exec(idea-shell, None, None)

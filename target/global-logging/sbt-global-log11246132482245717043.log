[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\thomb\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\thomb\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.5 (Oracle Corporation Java 15.0.1)
[debug]       Load.loadUnit: plugins took 81.4168ms
[debug]       Load.loadUnit: defsScala took 0.302ms
[debug] [Loading] Scanning directory C:\Users\thomb\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\thomb\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 16.1129 ms
[debug]           Load.resolveProject(global-plugins) took 33.4675ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\thomb\.sbt\1.0\plugins, plugins: List(<none>))) took 67.7939ms
[debug] [Loading] Done in C:\Users\thomb\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 91.5549ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2043ms
[debug]     Load.loadUnit(file:/C:/Users/thomb/.sbt/1.0/plugins/, ...) took 182.3419ms
[debug]   Load.apply: load took 327.2396ms
[debug]   Load.apply: resolveProjects took 5.8881ms
[debug]   Load.apply: finalTransforms took 49.9958ms
[debug]   Load.apply: config.delegates took 6.0454ms
[debug]   Load.apply: Def.make(settings)... took 801.7699ms
[debug]   Load.apply: structureIndex took 89.6087ms
[debug]   Load.apply: mkStreams took 1.3692ms
[info] loading global plugins from C:\Users\thomb\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2656.7559ms
[debug]           Load.loadUnit: plugins took 25.4743ms
[debug]           Load.loadUnit: defsScala took 0.004ms
[debug] [Loading] Scanning directory C:\Users\thomb\OneDrive\Documents\Scala\intelliJIdeaProjects\FunctionalProgrammingInScala_2\project
[debug]             Load.loadUnit: mkEval took 5.8988ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\thomb\OneDrive\Documents\Scala\intelliJIdeaProjects\FunctionalProgrammingInScala_2\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.6713 ms
[info] loading settings for project functionalprogramminginscala_2-build from idea1.sbt ...
[debug]               Load.resolveProject(functionalprogramminginscala_2-build) took 5.5161ms
[debug]             Load.loadTransitive: finalizeProject(Project(id functionalprogramminginscala_2-build, base: C:\Users\thomb\OneDrive\Documents\Scala\intelliJIdeaProjects\FunctionalProgrammingInScala_2\project, plugins: List(<none>))) took 9.8174ms
[debug] [Loading] Done in C:\Users\thomb\OneDrive\Documents\Scala\intelliJIdeaProjects\FunctionalProgrammingInScala_2\project, returning: (functionalprogramminginscala_2-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 140.2856ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.9884ms
[debug]         Load.loadUnit(file:/C:/Users/thomb/OneDrive/Documents/Scala/intelliJIdeaProjects/FunctionalProgrammingInScala_2/project/, ...) took 174.0787ms
[debug]       Load.apply: load took 176.6328ms
[debug]       Load.apply: resolveProjects took 0.108ms
[debug]       Load.apply: finalTransforms took 13.8987ms
[debug]       Load.apply: config.delegates took 0.5525ms
[debug]       Load.apply: Def.make(settings)... took 151.2094ms
[debug]       Load.apply: structureIndex took 35.6233ms
[debug]       Load.apply: mkStreams took 0.0024ms
[info] loading project definition from C:\Users\thomb\OneDrive\Documents\Scala\intelliJIdeaProjects\FunctionalProgrammingInScala_2\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 841.5654ms
[debug]     Load.loadUnit: defsScala took 0.0037ms
[debug] [Loading] Scanning directory C:\Users\thomb\OneDrive\Documents\Scala\intelliJIdeaProjects\FunctionalProgrammingInScala_2
[debug]       Load.loadUnit: mkEval took 0.3406ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\thomb\OneDrive\Documents\Scala\intelliJIdeaProjects\FunctionalProgrammingInScala_2, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.5679 ms
[info] loading settings for project functionalprogramminginscala_2 from build.sbt ...
[debug]         Load.resolveProject(functionalprogramminginscala_2) took 38.14ms
[debug]       Load.loadTransitive: finalizeProject(Project(id functionalprogramminginscala_2, base: C:\Users\thomb\OneDrive\Documents\Scala\intelliJIdeaProjects\FunctionalProgrammingInScala_2, plugins: List(<none>))) took 42.0213ms
[debug] [Loading] Done in C:\Users\thomb\OneDrive\Documents\Scala\intelliJIdeaProjects\FunctionalProgrammingInScala_2, returning: (functionalprogramminginscala_2)
[debug]     Load.loadUnit: loadedProjectsRaw took 90.6955ms
[debug]     Load.loadUnit: cleanEvalClasses took 16.1801ms
[debug]   Load.loadUnit(file:/C:/Users/thomb/OneDrive/Documents/Scala/intelliJIdeaProjects/FunctionalProgrammingInScala_2/, ...) took 949.5606ms
[debug] Load.apply: load took 951.981ms
[debug] Load.apply: resolveProjects took 0.1826ms
[debug] Load.apply: finalTransforms took 26.5318ms
[debug] Load.apply: config.delegates took 0.4995ms
[debug] Load.apply: Def.make(settings)... took 86.6432ms
[debug] Load.apply: structureIndex took 25.15ms
[debug] Load.apply: mkStreams took 0.0024ms
[info] set current project to FunctionalProgrammingInScala_2 (in build file:/C:/Users/thomb/OneDrive/Documents/Scala/intelliJIdeaProjects/FunctionalProgrammingInScala_2/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 55568 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 55568, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to FunctionalProgrammingInScala_2 (in build file:/C:/Users/thomb/OneDrive/Documents/Scala/intelliJIdeaProjects/FunctionalProgrammingInScala_2/)
[debug] > Exec(idea-shell, None, None)
